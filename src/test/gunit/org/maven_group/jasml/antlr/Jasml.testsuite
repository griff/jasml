gunit Jasml;

@header{
    package org.maven_group.jasml.antlr;
}

match:
"_ => 26" -> (=> _ 26)
"25 => 26 | _ => 12" -> "(=> 25 26) (=> _ 12)"
"12 => fn 25 => 26 | _ => 12" -> (=> 12 (fn (=> 25 26) (=> _ 12)))
"12 => (fn 25 => 26) | _ => 12" -> (=> 12 (fn (=> 25 26))) (=> _ 12)

type:
"int" -> "int"
"int list" -> (list int)
"int list list" -> (list (list int))
"list list" FAIL
"('a -> 'b) -> 'a list -> 'b list" -> (-> (-> (' a) (' b)) (-> (list (' a)) (list (' b))))
"'a -> 'b -> 'a list -> 'b list" -> (-> (' a) (-> (' b) (-> (list (' a)) (list (' b)))))

tuple:
"(ert)" -> "ert"
"(1, ert)" -> (TUPLE_LITERAL 1 ert)

list:
"[]" -> "LIST_LITERAL"
"[1]" -> (LIST_LITERAL 1)
"[1,2]" -> (LIST_LITERAL 1 2)

atomicPattern:
"a" -> "a"
"_" -> "_"
"12" -> "12"
"12.5" -> "12.5"
"true" -> "true"
"false" -> "false"
"#\"a\"" -> "#\"a\""
"\"abc\"" -> "\"abc\""
"[]" -> "LIST_LITERAL"
"[_]" -> (LIST_LITERAL _)
"[a]" -> (LIST_LITERAL a)
"[12]" -> (LIST_LITERAL 12)
"[12.5]" -> (LIST_LITERAL 12.5)
"[true]" -> (LIST_LITERAL true)
"[false]" -> (LIST_LITERAL false)
"[#\"a\"]" -> (LIST_LITERAL #"a")
"[\"abc\"]" -> (LIST_LITERAL "\"abc\"")
"1::2::[]" -> (:: 1 (:: 2 LIST_LITERAL))
"(1::[])::[3]::[]" -> (:: (:: 1 LIST_LITERAL) (:: (LIST_LITERAL 3) LIST_LITERAL))
"_::xs" -> (:: _ xs)
"(1, \"abc\")::(3, \"\")::[]" -> (:: (TUPLE_LITERAL 1 "\"abc\"") (:: (TUPLE_LITERAL 3 "\"\"") LIST_LITERAL))
